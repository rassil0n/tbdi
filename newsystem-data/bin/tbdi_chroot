#!/bin/sh

args(){
	BOOTOPT=$1; DEVICE=$2; INSTALLDIR=$3
	shift 3
	PACKAGES=$@
}

firststeps(){
	clear
cat << EOF

	Updating the sources.list
	-------------------------

EOF
	apt update; clear

cat << EOF

	Please choose a password for the root account:
	----------------------------------------------

EOF
	passwd
}

installbasepackages(){
	clear
cat << EOF

	Installing base-packages
	------------------------

EOF
	apt install --no-install-recommends -y\
	console-data console-common\
	tzdata locales keyboard-configuration\
	linux-image-amd64 sudo
}

reconfbasepackages(){
	dpkg-reconfigure tzdata locales console-data console-common keyboard-configuration
}

groupinstall(){
	cd ${INSTALLDIR}/src/installgroups
	for pkgs in $PACKAGES; do
		clear
cat << EOF
	Installing group ${pkgs}
	----------------------------

EOF
		apt install --no-install-recommends -y $(cat $pkgs)
	done

	clear
cat << EOF

	Installing python-modules
	-------------------------

EOF
	pip3 install neovim unidecode
	pip3 install mpd-art-box
	pip3 install ueberzug
}

installgrub(){
	clear
cat << EOF

	Installing grub bootloader
	--------------------------

EOF
	case $BOOTOPT in
		legacy)
			apt install grub-pc -y
 			grub-install ${DEVICE}
			;;
		efi)
			apt install grub-efi-amd64 -y
 			grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=debian_grub --recheck --debug
			;;
	esac

	grub-mkconfig -o /boot/grub/grub.cfg
}

installsuckless(){
	clear
cat << EOF

	Installing dependencies for suckless software
	---------------------------------------------

EOF
	apt install --no-install-recommends -y\
	libx11-dev libx11-xcb-dev\
	libxft-dev libxinerama-dev libxcb-res0-dev\
	libncurses-dev libxrandr-dev

	mkdir -p ${INSTALLDIR}/repos && cd ${INSTALLDIR}/repos

	for repos in dmenu dwm sent st tabbed; do
		clear
cat << EOF

	Installing ${repos}
	-----------------

EOF
		git clone https://github.com/rassil0n/$repos
		cd $repos && make clean install && cd ..
	done
}

installbrave(){
	clear
cat << EOF

	Installing brave-browser
	------------------------
EOF

	apt install apt-transport-https curl -y
	curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
	echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"| tee /etc/apt/sources.list.d/brave-browser-release.list
	apt update && apt install brave-browser

}

installsimplemtpfs(){
	clear
cat << EOF

	Installing simple-mtpfs
	-----------------------
EOF
	apt install dh-autoreconf libfuse-dev libmtp-dev -y
	cd ${INSTALLDIR}/repos
	git clone https://github.com/phatina/simple-mtpfs && cd simple-mtpfs
	./autogen.sh
	mkdir build && cd build
	../configure
	make
	make install
}

installzoom(){
	clear
cat << EOF

	Installing zoom
	---------------
EOF

	cd ${INSTALLDIR}
	wget https://zoom.us/client/latest/zoom_amd64.deb
	apt install ./zoom_amd64.deb
}

installdoas(){
	clear
cat << EOF

	Installing doas
	---------------

EOF
	cd ${INSTALLDIR}/repos
	git clone https://github.com/slicer69/doas && cd doas && make && make clean install
}

installgtk(){
	mkdir -p /usr/share/{themes,icons}
	tar -xf ${INSTALLDIR}/src/gtk/nordic-icons.tar -C /usr/share/icons
	tar -xf ${INSTALLDIR}/src/gtk/nordic-theme.tar -C /usr/share/themes
}

editsudoers(){
	chmod +w /etc/sudoers

cat >> /etc/sudoers << EOF

# generated by tbdi
%sudo ALL = NOPASSWD: /bin/mount, /bin/umount
%sudo ALL = NOPASSWD: /usr/bin/apt update, /usr/bin/apt search
EOF
	chmod -w /etc/sudoers
}

main(){
	args $@

	firststeps
	installbasepackages
	reconfbasepackages
	groupinstall
	installgrub
	installsuckless
	installbrave
	installsimplemtpfs
	installzoom
	installdoas
	installgtk
	editsudoers
}

main ${@}
